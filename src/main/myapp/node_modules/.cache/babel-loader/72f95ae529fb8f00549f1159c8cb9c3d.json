{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport placeholderImg from '../Static/Images/placeholder-img.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhoToFollow() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [friendIds, setFriendIds] = useState([]);\n\n  function handleFollow(secondUserId) {\n    const addFriendship = {\n      firstUserId: sessionStorage.getItem(\"user_id\"),\n      secondUserId: secondUserId\n    };\n    console.log(addFriendship);\n    axios.post(\"http://localhost:8080/api/friendships/create\", addFriendship).then(response => console.log(response)).catch(error => console.log(error));\n  }\n\n  function handleUnfollow(secondUserId) {\n    const addFriendship = {\n      firstUserId: sessionStorage.getItem(\"user_id\"),\n      secondUserId: secondUserId\n    };\n    axios.delete(\"http://localhost:8080/api/friendships/delete\", addFriendship).then(response => console.log(\"Success.\")).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/users/\").then(response => {\n      setUsers(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function findFriendIds() {\n    const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => setFriendIds(response.data)).catch(err => console.log(err.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgba(60, 64, 67, 0.01)\"\n    },\n    className: \"rounded mt-5 p-1\",\n    id: \"who-to-follow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: findFriendIds,\n      children: \"Find friend ids\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bg-transparent\",\n      children: \"Who to follow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bg-transparent px-1\",\n      children: users.map((user, index) => {\n        if (user.userId != sessionStorage.getItem(\"user_id\")) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center bg-transparent my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: placeholderImg,\n              alt: \"\",\n              className: \"rounded-circle bg-transparent\",\n              id: \"tweet-form-profile-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-transparent\",\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), !friendIds.includes(user.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleFollow(e.target.value),\n              value: user.userId,\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleUnfollow(e.target.value),\n              value: user.userId,\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WhoToFollow, \"gBJ/vYW2siYSneN3qQtRtCKEqJ4=\");\n\n_c = WhoToFollow;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhoToFollow\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx"],"names":["axios","React","useEffect","useState","placeholderImg","WhoToFollow","users","setUsers","friendIds","setFriendIds","handleFollow","secondUserId","addFriendship","firstUserId","sessionStorage","getItem","console","log","post","then","response","catch","error","handleUnfollow","delete","get","data","err","findFriendIds","link","backgroundColor","map","user","index","userId","firstName","lastName","includes","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport placeholderImg from '../Static/Images/placeholder-img.png'\n\n\n\n\n\n\nexport default function WhoToFollow() {\n    const [users, setUsers] = useState([]);\n    const [friendIds, setFriendIds] = useState([]);\n\n    function handleFollow(secondUserId){\n        const addFriendship = {\n            firstUserId: sessionStorage.getItem(\"user_id\"),\n            secondUserId: secondUserId\n        }\n        console.log(addFriendship);\n        axios.post(\"http://localhost:8080/api/friendships/create\", addFriendship)\n            .then(response => console.log(response))\n            .catch(error => console.log(error));\n    }\n\n    function handleUnfollow(secondUserId){\n        const addFriendship = {\n            firstUserId: sessionStorage.getItem(\"user_id\"),\n            secondUserId: secondUserId\n        }\n        axios.delete(\"http://localhost:8080/api/friendships/delete\", addFriendship)\n            .then(response => console.log(\"Success.\"))\n            .catch(error => console.log(error))\n    }\n\n\n    useEffect(()=> {\n\n\n        axios.get(\"http://localhost:8080/api/users/\")\n            .then(response => {\n                setUsers(response.data);\n            })\n            .catch(err => console.log(err))\n    },[])\n\n    function findFriendIds(){\n        const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => setFriendIds(response.data))\n            .catch(err => console.log(err.response));\n    }\n\n\n\n    return (\n        <div style={{backgroundColor: \"rgba(60, 64, 67, 0.01)\"}} className=\"rounded mt-5 p-1\" id=\"who-to-follow-container\">\n            <button onClick={findFriendIds}>Find friend ids</button>\n            <h3 className=\"bg-transparent\">Who to follow</h3>\n            <ul className=\"bg-transparent px-1\">\n                {users.map((user, index) => {\n                    if(user.userId != sessionStorage.getItem(\"user_id\")){\n                        return(\n                        <li className=\"d-flex justify-content-between align-items-center bg-transparent my-3\" key={index}>\n                            <img src={placeholderImg} alt=\"\" className=\"rounded-circle bg-transparent\" id=\"tweet-form-profile-img\"/>\n                            <span className=\"bg-transparent\">{user.firstName} {user.lastName}</span>\n                            {!friendIds.includes(user.userId) ? (\n                                <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleFollow(e.target.value)} value={user.userId}>Follow</button>\n                                )\n                            :   <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleUnfollow(e.target.value)} value={user.userId}>Unfollow</button>\n                            }\n                        </li>\n                        )\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}