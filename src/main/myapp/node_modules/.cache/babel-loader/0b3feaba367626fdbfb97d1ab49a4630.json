{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/TweetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TweetForm(props) {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [imageError, setImageError] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (message.length !== 0) {\n      const post = {\n        message: message,\n        imageUrl: imageUrl\n      };\n      axios.post(\"http://localhost:8080/api/posts/create/\" + props.loggedInUser.userId, post).then(response => {\n        let newPosts = [...props.posts];\n        newPosts.push(response.data);\n        props.setPosts(newPosts);\n        setMessage(\"\");\n        setMessageError(\"\");\n        setImageUrl(\"\");\n      }).catch(error => console.log(error.response));\n    } else {\n      setMessageError(\"Your anotter message cannot be blank!\");\n    }\n  }\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n        setImageError(\"File is too large!\");\n      };\n    });\n  };\n\n  const uploadImage = async e => {\n    const file = e.target.files[0];\n    const base64 = await convertBase64(file);\n    setImageUrl(base64);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweet-form\",\n    className: \"pb-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-1 mt-2 d-flex align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.loggedInUser.profileImageUrl,\n          alt: \"\",\n          className: \"rounded-circle profile-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-100 mx-3\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"What's happening?\",\n            className: \"w-100 bg-transparent border-0\",\n            rows: \"3\",\n            id: \"tweet-form-input\",\n            maxLength: \"200\",\n            value: message,\n            onInput: e => {\n              setMessage(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-3\",\n          children: imageUrl != \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"rounded post-img\",\n            src: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-end\",\n          children: [imageUrl != \"\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"btn  border-danger text-start mx-2 mb-2 px-1\",\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              onClick: () => setImageUrl(\"\"),\n              children: \"Remove Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"btn text-light border text-start mx-4 px-1\",\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"form-control bg-transparent border-0\",\n              accept: \"image/*\",\n              onChange: e => uploadImage(e),\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary rounded-pill p-2\",\n            id: \"tweet-submit\",\n            children: \"Anotter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger bg-transparent\",\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: messageError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetForm, \"nu4scYCb8Wn9VRsLLLYbYDe01iE=\");\n\n_c = TweetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetForm\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/TweetForm.jsx"],"names":["axios","React","useState","TweetForm","props","message","setMessage","messageError","setMessageError","imageError","setImageError","imageUrl","setImageUrl","handleSubmit","e","preventDefault","length","post","loggedInUser","userId","then","response","newPosts","posts","push","data","setPosts","catch","error","console","log","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","uploadImage","target","files","base64","profileImageUrl","value","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASW,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGV,OAAO,CAACW,MAAR,KAAmB,CAAtB,EAAwB;AACpB,YAAMC,IAAI,GAAC;AACPZ,QAAAA,OAAO,EAAEA,OADF;AAEPM,QAAAA,QAAQ,EAAEA;AAFH,OAAX;AAKIX,MAAAA,KAAK,CAACiB,IAAN,CAAW,4CAA4Cb,KAAK,CAACc,YAAN,CAAmBC,MAA1E,EAAkFF,IAAlF,EACCG,IADD,CACMC,QAAQ,IAAI;AACd,YAAIC,QAAQ,GAAG,CAAC,GAAGlB,KAAK,CAACmB,KAAV,CAAf;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcH,QAAQ,CAACI,IAAvB;AACArB,QAAAA,KAAK,CAACsB,QAAN,CAAeJ,QAAf;AACAhB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAI,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH,OARD,EASCe,KATD,CASOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACP,QAAlB,CAThB;AAUH,KAhBL,MAgBW;AACPb,MAAAA,eAAe,CAAC,uCAAD,CAAf;AACH;AACJ;;AAGD,QAAMuB,aAAa,GAAIC,IAAD,IAAU;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,MAAAA,UAAU,CAACE,aAAX,CAAyBN,IAAzB;;AAEAI,MAAAA,UAAU,CAACG,MAAX,GAAqB,MAAM;AACvBL,QAAAA,OAAO,CAACE,UAAU,CAACI,MAAZ,CAAP;AACH,OAFD;;AAIAJ,MAAAA,UAAU,CAACK,OAAX,GAAuBb,KAAD,IAAW;AAC7BO,QAAAA,MAAM,CAACP,KAAD,CAAN;AACAlB,QAAAA,aAAa,CAAC,oBAAD,CAAb;AACH,OAHD;AAKH,KAbM,CAAP;AAcH,GAfD;;AAiBA,QAAMgC,WAAW,GAAG,MAAO5B,CAAP,IAAa;AAC7B,UAAMkB,IAAI,GAAGlB,CAAC,CAAC6B,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,MAAM,GAAG,MAAMd,aAAa,CAACC,IAAD,CAAlC;AACApB,IAAAA,WAAW,CAACiC,MAAD,CAAX;AACH,GAJD;;AAOA,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEzC,KAAK,CAACc,YAAN,CAAmB4B,eAA7B;AAA8C,UAAA,GAAG,EAAC,EAAlD;AAAqD,UAAA,SAAS,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAEhC,CAAC,IAAID,YAAY,CAACC,CAAD,CAAxD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAU,YAAA,WAAW,EAAC,mBAAtB;AAA0C,YAAA,SAAS,EAAC,+BAApD;AAAoF,YAAA,IAAI,EAAC,GAAzF;AAA6F,YAAA,EAAE,EAAC,kBAAhG;AAAmH,YAAA,SAAS,EAAC,KAA7H;AAAmI,YAAA,KAAK,EAAET,OAA1I;AAAmJ,YAAA,OAAO,EAAES,CAAC,IAAI;AAC7JR,cAAAA,UAAU,CAACQ,CAAC,CAAC6B,MAAF,CAASI,KAAV,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBACKpC,QAAQ,IAAI,EAAZ,gBACG;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAkC,YAAA,GAAG,EAAEA;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADH,GAGD;AAJJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eAaI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,qBACEA,QAAQ,IAAI,EAAZ,gBACE;AAAO,YAAA,SAAS,EAAC,8CAAjB;AAAgE,YAAA,KAAK,EAAE;AAACqC,cAAAA,UAAU,EAAC;AAAZ,aAAvE;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,aAAhB;AAA8B,cAAA,OAAO,EAAE,MAAMpC,WAAW,CAAC,EAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,GAKE,IANJ,eASI;AAAO,YAAA,SAAS,EAAC,4CAAjB;AAA8D,YAAA,KAAK,EAAE;AAACoC,cAAAA,UAAU,EAAC;AAAZ,aAArE;AAAA,oDAEI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,sCAA7B;AAAoE,cAAA,MAAM,EAAC,SAA3E;AAAqF,cAAA,QAAQ,EAAElC,CAAC,IAAI4B,WAAW,CAAC5B,CAAD,CAA/G;AAAoH,cAAA,MAAM;AAA1H;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAaI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,kCAAhC;AAAmE,YAAA,EAAE,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eA4BI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACA;AAAG,YAAA,SAAS,EAAC,4BAAb;AAA0C,YAAA,KAAK,EAAE;AAACkC,cAAAA,UAAU,EAAC;AAAZ,aAAjD;AAAA,sBAAuEzC;AAAvE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAlGuBJ,S;;KAAAA,S","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\n\nexport default function TweetForm(props) {\n    const [message, setMessage] = useState(\"\");\n    const [messageError, setMessageError] = useState(\"\");\n    const [imageError, setImageError] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    function handleSubmit(e){\n        e.preventDefault();\n\n        if(message.length !== 0){\n            const post={\n                message: message,\n                imageUrl: imageUrl\n            }\n\n                axios.post(\"http://localhost:8080/api/posts/create/\" + props.loggedInUser.userId, post)\n                .then(response => {\n                    let newPosts = [...props.posts];\n                    newPosts.push(response.data);\n                    props.setPosts(newPosts);\n                    setMessage(\"\");\n                    setMessageError(\"\");\n                    setImageUrl(\"\");\n                })\n                .catch(error => console.log(error.response))\n            } else {\n            setMessageError(\"Your anotter message cannot be blank!\");\n        }        \n    }\n\n\n    const convertBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n\n            fileReader.onload = (() => {\n                resolve(fileReader.result)\n            });\n\n            fileReader.onerror = ((error) => {\n                reject(error);\n                setImageError(\"File is too large!\")\n            })\n\n        })\n    }\n\n    const uploadImage = async (e) => {\n        const file = e.target.files[0];\n        const base64 = await convertBase64(file);\n        setImageUrl(base64);\n    }\n\n\n    return (\n        <div id=\"tweet-form\" className=\"pb-2\">\n            <div className=\"px-1 mt-2 d-flex align-items-start\">\n                <p className=\"profile-img-container\">\n                    <img src={props.loggedInUser.profileImageUrl} alt=\"\" className=\"rounded-circle profile-img\"/>\n                </p>\n                <form className=\"w-100 mx-3\" onSubmit={e => handleSubmit(e)}>\n                    <div className=\"text-end\">\n                        <textarea placeholder=\"What's happening?\" className=\"w-100 bg-transparent border-0\" rows=\"3\" id=\"tweet-form-input\" maxLength=\"200\" value={message} onInput={e => {\n                            setMessage(e.target.value);\n                        }}/>\n                    </div>\n                    <div className=\"text-center mb-3\">\n                        {imageUrl != \"\" ?\n                            <img className=\"rounded post-img\" src={imageUrl}/>\n                        :\n                        null}\n                    </div>\n                    \n                    <div className=\"text-end\">\n                    { imageUrl != \"\" ?\n                        <label className=\"btn  border-danger text-start mx-2 mb-2 px-1\" style={{fontWeight:\"bold\"}}>\n                            <span className=\"text-danger\" onClick={() => setImageUrl(\"\")}>Remove Image</span>\n                        </label> \n                        :\n                        null\n                    }\n                    \n                        <label className=\"btn text-light border text-start mx-4 px-1\" style={{fontWeight:\"bold\"}}>\n                            Upload Image\n                            <input type=\"file\" className=\"form-control bg-transparent border-0\" accept=\"image/*\" onChange={e => uploadImage(e)} hidden/>\n                        </label>  \n                        <button type=\"submit\" className=\"btn btn-primary rounded-pill p-2\" id=\"tweet-submit\">Anotter</button>    \n                    </div>\n                    <div className=\"text-end\">\n                    <p className=\"text-danger bg-transparent\" style={{fontWeight:\"bold\"}}>{messageError}</p>\n\n                    </div>\n                    \n                </form>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}