{"ast":null,"code":"import _toConsumableArray from\"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from'axios';import React,{useEffect,useState}from'react';import{useHistory,useParams}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function UserDisplay(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userToDisplay=_useState2[0],setUserToDisplay=_useState2[1];var history=useHistory();var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),friendIds=_useState4[0],setFriendIds=_useState4[1];useEffect(function(){axios.get(\"http://localhost:8080/api/users/\"+props.id).then(function(response){if(response.data.biography||response.data.biography==\"\"){//User was found\nsetUserToDisplay(response.data);findFriendIds();}else{//User was not found\nhistory.push(\"/\");}}).catch(function(err){return console.log(err);});},[]);function handleFollow(secondUserId){var addFriendship={firstUserId:sessionStorage.getItem(\"user_id\"),secondUserId:secondUserId};axios.post(\"http://localhost:8080/api/friendships/create\",addFriendship).then(function(response){findFriendIds();}).catch(function(error){return console.log(error);});}function handleUnfollow(secondUserId){var firstUserId=sessionStorage.getItem(\"user_id\");var link=\"http://localhost:8080/api/friendships/delete/\"+firstUserId+\"/\"+secondUserId;axios.delete(link).then(function(response){var newFriendIds=_toConsumableArray(friendIds);newFriendIds.splice(newFriendIds.indexOf(secondUserId),1);setFriendIds(newFriendIds);}).catch(function(error){return console.log(error);});}function findFriendIds(){var link=\"http://localhost:8080/api/friendships/findAllFriends/\"+sessionStorage.getItem(\"user_id\");axios.get(link).then(function(response){return setFriendIds(response.data);}).catch(function(err){return console.log(err.response);});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-start\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://c4.wallpaperflare.com/wallpaper/55/456/961/4k-galaxy-space-planet-wallpaper-preview.jpg\",alt:\"Profile banner\",id:\"profile-banner\",style:{objectFit:\"cover\",objectPosition:\"center center\",height:\"175px\",width:\"100%\"}}),/*#__PURE__*/_jsxs(\"div\",{className:\"ms-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",style:{height:\"50px\"},children:[/*#__PURE__*/_jsx(\"img\",{src:userToDisplay.profileImageUrl,style:{borderRadius:\"50%\",width:\"133px\",height:\"133px\",position:\"relative\",top:\"-90px\",border:\"3px solid black\"}}),userToDisplay.userId!=sessionStorage.getItem(\"user_id\")?!friendIds.includes(userToDisplay.userId)?/*#__PURE__*/_jsx(\"button\",{className:\"btn rounded-pill bg-light follow-btn justify-self-end\",onClick:function onClick(e){return handleFollow(e.target.value);},value:userToDisplay.userId,children:\"Follow\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn rounded-pill bg-transparent text-light border border-3 follow-btn\",onClick:function onClick(e){return handleUnfollow(e.target.value);},value:userToDisplay.userId,children:\"Unfollow\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn rounded-pill bg-transparent text-light border border-3 follow-btn\",onClick:function onClick(){return history.push(\"/account\");},children:\"Edit Profile\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"h3 mx-3\",style:{height:\"50px\"},children:[userToDisplay.firstName,\" \",userToDisplay.lastName]}),/*#__PURE__*/_jsx(\"p\",{className:\"px-3 mt-4\",children:userToDisplay.biography})]}),/*#__PURE__*/_jsx(\"hr\",{})]})});}","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/UserDisplay.jsx"],"names":["axios","React","useEffect","useState","useHistory","useParams","UserDisplay","props","userToDisplay","setUserToDisplay","history","friendIds","setFriendIds","get","id","then","response","data","biography","findFriendIds","push","catch","err","console","log","handleFollow","secondUserId","addFriendship","firstUserId","sessionStorage","getItem","post","error","handleUnfollow","link","delete","newFriendIds","splice","indexOf","objectFit","objectPosition","height","width","profileImageUrl","borderRadius","position","top","border","userId","includes","e","target","value","firstName","lastName"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router'\n\nexport default function UserDisplay(props) {\n    const [userToDisplay, setUserToDisplay] = useState({});\n    let history = useHistory();\n    const [friendIds, setFriendIds] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/api/users/\" + props.id)\n            .then(response => {\n                if(response.data.biography || response.data.biography == \"\"){\n                    //User was found\n                    setUserToDisplay(response.data)\n                    findFriendIds();\n                } else{\n                    //User was not found\n                    history.push(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    function handleFollow(secondUserId){\n        const addFriendship = {\n            firstUserId: sessionStorage.getItem(\"user_id\"),\n            secondUserId: secondUserId\n        }\n        axios.post(\"http://localhost:8080/api/friendships/create\", addFriendship)\n            .then(response => {\n                findFriendIds();\n            })\n            .catch(error => console.log(error));\n    }\n\n    function handleUnfollow(secondUserId){\n        const firstUserId = sessionStorage.getItem(\"user_id\");\n        const link  = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n        axios.delete(link)\n            .then(response => {\n                let newFriendIds = [...friendIds];\n                newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n                setFriendIds(newFriendIds);\n        })\n            .catch(error => console.log(error))\n    }\n\n    function findFriendIds(){\n        const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => setFriendIds(response.data))\n            .catch(err => console.log(err.response));\n    }\n\n    return (\n        <>\n            <div className=\"text-start\">\n                <img src=\"https://c4.wallpaperflare.com/wallpaper/55/456/961/4k-galaxy-space-planet-wallpaper-preview.jpg\" alt=\"Profile banner\" id=\"profile-banner\" style={{objectFit:\"cover\", objectPosition: \"center center\" ,height: \"175px\", width: \"100%\"}}/>\n                <div className=\"ms-3\">\n                    <div className=\"d-flex justify-content-between\" style={{height:\"50px\"}}>\n                        <img src={userToDisplay.profileImageUrl} style={{borderRadius:\"50%\", width:\"133px\", height:\"133px\", position:\"relative\", top:\"-90px\", border:\"3px solid black\"}}/>\n                        {userToDisplay.userId != sessionStorage.getItem(\"user_id\") ?\n                        !friendIds.includes(userToDisplay.userId) ? (\n                            <button className=\"btn rounded-pill bg-light follow-btn justify-self-end\"  onClick={e => handleFollow(e.target.value)} value={userToDisplay.userId}>Follow</button>\n                            )\n                            : <button className=\"btn rounded-pill bg-transparent text-light border border-3 follow-btn\"  onClick={e => handleUnfollow(e.target.value)} value={userToDisplay.userId}>Unfollow</button>\n                        \n                            : <button className=\"btn rounded-pill bg-transparent text-light border border-3 follow-btn\"  onClick={() => history.push(\"/account\")}>Edit Profile</button>\n  \n                        }\n                        \n                    </div>\n                    <span className=\"h3 mx-3\" style={{height:\"50px\"}}>{userToDisplay.firstName} {userToDisplay.lastName}</span>\n                    <p className=\"px-3 mt-4\">{userToDisplay.biography}</p>\n                </div>\n                <hr />\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}