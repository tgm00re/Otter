{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhoToFollow(props) {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [friendIds, setFriendIds] = useState([]);\n  const [sentNotifs, setSentNotifs] = useState([]);\n  const [recipientIds, setRecipientIds] = useState([]);\n\n  function handleCancelRequest(recipientId) {\n    let notifIdToDelete = -1;\n    console.log(sentNotifs);\n\n    for (let i = 0; i < sentNotifs.length; i++) {\n      if (sentNotifs[i].recipientId == recipientId) {\n        console.log(sentNotifs[i].recipientId + \" == \" + recipientId);\n        notifIdToDelete = sentNotifs[i].id;\n      }\n    }\n\n    if (notifIdToDelete !== -1) {\n      console.log(\"Deleting: \", notifIdToDelete);\n      axios.delete(\"http://localhost:8080/api/notifications/delete/\" + notifIdToDelete).then(response => {\n        let newSentNotif = [...sentNotifs];\n        newSentNotif.splice(newSentNotif.indexOf(notifIdToDelete));\n        setSentNotifs(newSentNotif);\n        let newArr = [...recipientIds];\n        const indexToRemove = newArr.indexOf(recipientId);\n        newArr.splice(indexToRemove, 1);\n        setRecipientIds(newArr);\n      }).catch(err => console.log(err.response));\n    } else {\n      console.log(\"Reached else! :D\");\n      let newArr = [...recipientIds];\n      const indexToRemove = newArr.indexOf(recipientId);\n      newArr.splice(indexToRemove, 1);\n      setRecipientIds(newArr);\n    }\n  }\n\n  function handleFollow(secondUserId) {\n    console.log(secondUserId + \" <<<<<\");\n    const notification = {\n      message: \"Friend Request\",\n      senderId: sessionStorage.getItem(\"user_id\"),\n      senderName: props.loggedInUser.firstName + \" \" + props.loggedInUser.lastName,\n      recipientId: secondUserId\n    };\n    axios.post(\"http://localhost:8080/api/notifications/create\", notification).then(response => {\n      let newSentNotif = [...sentNotifs];\n      console.log(\"Adding notification: \");\n      console.log(response.data);\n      newSentNotif.push(response.data);\n      setSentNotifs(newSentNotif);\n      let newRecipientIds = [...recipientIds];\n      newRecipientIds.push(response.data.recipientId);\n      setRecipientIds(newRecipientIds);\n    }).catch(error => console.log(error));\n  }\n\n  function handleUnfollow(secondUserId) {\n    const firstUserId = sessionStorage.getItem(\"user_id\");\n    const link = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n    axios.delete(link).then(response => {\n      let newFriendIds = [...friendIds];\n      newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n      setFriendIds(newFriendIds);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/users/\").then(response => {\n      setUsers(response.data);\n      findFriendIds();\n    }).catch(err => console.log(err));\n  }, []);\n\n  function findFriendIds() {\n    const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => setFriendIds(response.data)).catch(err => console.log(err.response));\n  }\n\n  useEffect(() => {\n    const link = \"http://localhost:8080/api/notifications/find/sent/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => {\n      setSentNotifs(response.data);\n      let sentIds = [];\n      response.data.forEach(notif => {\n        sentIds.push(notif.recipientId);\n      });\n      setRecipientIds(sentIds);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgba(255,255,255,0.10)\"\n    },\n    className: \"rounded mt-5 p-1\",\n    id: \"who-to-follow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bg-transparent\",\n      children: \"Who to follow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bg-transparent px-1\",\n      children: users.map((user, index) => {\n        if (user.userId != sessionStorage.getItem(\"user_id\")) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center bg-transparent my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profileImageUrl,\n              alt: \"\",\n              className: \"rounded-circle bg-transparent profile-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-transparent post-acc-link-txt\",\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), user.userId, recipientIds.includes(user.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleCancelRequest(user.userId),\n              children: \"Requested\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 41\n            }, this) : !friendIds.includes(user.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleFollow(user.userId),\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleUnfollow(user.userId),\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 47\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WhoToFollow, \"Hgju7weTB6vjauKbnEwrSOSM9n4=\");\n\n_c = WhoToFollow;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhoToFollow\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx"],"names":["axios","React","useEffect","useState","WhoToFollow","props","users","setUsers","friendIds","setFriendIds","sentNotifs","setSentNotifs","recipientIds","setRecipientIds","handleCancelRequest","recipientId","notifIdToDelete","console","log","i","length","id","delete","then","response","newSentNotif","splice","indexOf","newArr","indexToRemove","catch","err","handleFollow","secondUserId","notification","message","senderId","sessionStorage","getItem","senderName","loggedInUser","firstName","lastName","post","data","push","newRecipientIds","error","handleUnfollow","firstUserId","link","newFriendIds","get","findFriendIds","sentIds","forEach","notif","backgroundColor","map","user","index","userId","profileImageUrl","includes","e"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n\n\n\n\n\nexport default function WhoToFollow(props) {\n    const [users, setUsers] = useState([]);\n    const [friendIds, setFriendIds] = useState([]);\n    const [sentNotifs, setSentNotifs] = useState([]);\n    const [recipientIds, setRecipientIds] = useState([]);\n\n    function handleCancelRequest(recipientId) {\n        let notifIdToDelete = -1;\n        console.log(sentNotifs);\n        for (let i = 0; i < sentNotifs.length; i++) {\n            if (sentNotifs[i].recipientId == recipientId) {\n                console.log(sentNotifs[i].recipientId + \" == \" + recipientId);\n                notifIdToDelete = sentNotifs[i].id;\n            }\n        }\n        if(notifIdToDelete !== -1){\n            console.log(\"Deleting: \", notifIdToDelete);\n        axios.delete(\"http://localhost:8080/api/notifications/delete/\" + notifIdToDelete)\n            .then(response => {\n                let newSentNotif = [...sentNotifs];\n                newSentNotif.splice(newSentNotif.indexOf(notifIdToDelete));\n                setSentNotifs(newSentNotif);\n\n                let newArr = [...recipientIds];\n                const indexToRemove = newArr.indexOf(recipientId);\n                newArr.splice(indexToRemove, 1);\n                setRecipientIds(newArr);\n\n            })\n            .catch(err => console.log(err.response))\n        } else {\n            console.log(\"Reached else! :D\")\n            let newArr = [...recipientIds];\n            const indexToRemove = newArr.indexOf(recipientId);\n            newArr.splice(indexToRemove, 1);\n            setRecipientIds(newArr);\n        }\n        \n    }\n\n\n    function handleFollow(secondUserId) {\n        console.log(secondUserId + \" <<<<<\")\n        const notification = {\n            message: \"Friend Request\",\n            senderId: sessionStorage.getItem(\"user_id\"),\n            senderName: props.loggedInUser.firstName + \" \" + props.loggedInUser.lastName,\n            recipientId: secondUserId\n        }\n        axios.post(\"http://localhost:8080/api/notifications/create\", notification)\n            .then(response => {\n                let newSentNotif = [...sentNotifs];\n                console.log(\"Adding notification: \" );\n                console.log(response.data);\n                newSentNotif.push(response.data);\n                setSentNotifs(newSentNotif);\n\n                let newRecipientIds = [...recipientIds];\n                newRecipientIds.push(response.data.recipientId);\n                setRecipientIds(newRecipientIds);\n            })\n            .catch(error => console.log(error));\n    }\n\n    function handleUnfollow(secondUserId) {\n        const firstUserId = sessionStorage.getItem(\"user_id\");\n        const link = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n        axios.delete(link)\n            .then(response => {\n                let newFriendIds = [...friendIds];\n                newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n                setFriendIds(newFriendIds);\n            })\n            .catch(error => console.log(error))\n    }\n\n\n    useEffect(() => {\n\n        axios.get(\"http://localhost:8080/api/users/\")\n            .then(response => {\n                setUsers(response.data);\n                findFriendIds();\n\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    function findFriendIds() {\n        const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => setFriendIds(response.data))\n            .catch(err => console.log(err.response));\n    }\n\n\n\n    useEffect(() => {\n        const link = \"http://localhost:8080/api/notifications/find/sent/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => {\n                setSentNotifs(response.data);\n                let sentIds = [];\n                response.data.forEach(notif => {\n                    sentIds.push(notif.recipientId);\n                })\n                setRecipientIds(sentIds);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n\n\n    return (\n        <div style={{ backgroundColor: \"rgba(255,255,255,0.10)\" }} className=\"rounded mt-5 p-1\" id=\"who-to-follow-container\">\n            <h3 className=\"bg-transparent\">Who to follow</h3>\n            <ul className=\"bg-transparent px-1\">\n                {users.map((user, index) => {\n                    if (user.userId != sessionStorage.getItem(\"user_id\")) {\n                        return (\n                            <li className=\"d-flex justify-content-between align-items-center bg-transparent my-3\" key={index}>\n                                <img src={user.profileImageUrl} alt=\"\" className=\"rounded-circle bg-transparent profile-img\" />\n                                <span className=\"bg-transparent post-acc-link-txt\">{user.firstName} {user.lastName}</span>\n                                {user.userId}\n                                {\n                                    recipientIds.includes(user.userId) ? (\n                                        <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleCancelRequest(user.userId)}>Requested</button>\n                                    )\n\n                                        : !friendIds.includes(user.userId) ? (\n                                            <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleFollow(user.userId)}>Follow</button>\n                                        )\n                                            : <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleUnfollow(user.userId)}>Unfollow</button>\n                                }\n                            </li>\n                        )\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}