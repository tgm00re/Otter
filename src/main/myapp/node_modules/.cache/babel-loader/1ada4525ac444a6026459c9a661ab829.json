{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhoToFollow(props) {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [friendIds, setFriendIds] = useState([]);\n  const [sentNotificationsRecipientIds, setSentNotificationsRecipientIds] = useState([]);\n\n  function handleFollow(secondUserId) {\n    const notification = {\n      message: \"Friend Request\",\n      senderId: sessionStorage.getItem(\"user_id\"),\n      senderName: props.loggedInUser.firstName + \" \" + props.loggedInUser.lastName,\n      recipientId: secondUserId\n    };\n    axios.post(\"http://localhost:8080/api/notifications/create\", notification).then(response => {\n      let newSentNotif = [...sentNotificationsRecipientIds];\n      newSentNotif.push(notification.recipientId);\n      setSentNotificationsRecipientIds(newSentNotif);\n    }).catch(error => console.log(error));\n  }\n\n  function handleUnfollow(secondUserId) {\n    const firstUserId = sessionStorage.getItem(\"user_id\");\n    const link = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n    axios.delete(link).then(response => {\n      let newFriendIds = [...friendIds];\n      newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n      setFriendIds(newFriendIds);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/users/\").then(response => {\n      setUsers(response.data);\n      findFriendIds();\n    }).catch(err => console.log(err));\n  }, []);\n\n  function findFriendIds() {\n    const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => setFriendIds(response.data)).catch(err => console.log(err.response));\n  }\n\n  useEffect(() => {\n    const link = \"http://localhost:8080/api/notifications/find/sent/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => {\n      let recipientIds = [];\n      response.data.forEach(notification => recipientIds.push(notification.recipientId));\n      setSentNotificationsRecipientIds(recipientIds);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgba(255,255,255,0.10)\"\n    },\n    className: \"rounded mt-5 p-1\",\n    id: \"who-to-follow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bg-transparent\",\n      children: \"Who to follow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bg-transparent px-1\",\n      children: users.map((user, index) => {\n        if (user.userId != sessionStorage.getItem(\"user_id\")) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center bg-transparent my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profileImageUrl,\n              alt: \"\",\n              className: \"rounded-circle bg-transparent profile-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-transparent post-acc-link-txt\",\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), sentNotificationsRecipientIds.includes(user.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => console.log(e.target.value),\n              value: user.userId,\n              children: \"Requested\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 41\n            }, this) : !friendIds.includes(user.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleFollow(e.target.value),\n              value: user.userId,\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleUnfollow(e.target.value),\n              value: user.userId,\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 47\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WhoToFollow, \"giVRNib8spnS1vQbW9zncT0NlnM=\");\n\n_c = WhoToFollow;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhoToFollow\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx"],"names":["axios","React","useEffect","useState","WhoToFollow","props","users","setUsers","friendIds","setFriendIds","sentNotificationsRecipientIds","setSentNotificationsRecipientIds","handleFollow","secondUserId","notification","message","senderId","sessionStorage","getItem","senderName","loggedInUser","firstName","lastName","recipientId","post","then","response","newSentNotif","push","catch","error","console","log","handleUnfollow","firstUserId","link","delete","newFriendIds","splice","indexOf","get","data","findFriendIds","err","recipientIds","forEach","backgroundColor","map","user","index","userId","profileImageUrl","includes","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n\n\n\n\n\nexport default function WhoToFollow(props) {\n    const [users, setUsers] = useState([]);\n    const [friendIds, setFriendIds] = useState([]);\n    const [sentNotificationsRecipientIds, setSentNotificationsRecipientIds] = useState([]);\n\n    function handleFollow(secondUserId) {\n        const notification = {\n            message: \"Friend Request\",\n            senderId: sessionStorage.getItem(\"user_id\"),\n            senderName: props.loggedInUser.firstName + \" \" + props.loggedInUser.lastName,\n            recipientId: secondUserId\n        }\n        axios.post(\"http://localhost:8080/api/notifications/create\", notification)\n            .then(response => {\n                let newSentNotif = [...sentNotificationsRecipientIds];\n                newSentNotif.push(notification.recipientId);\n                setSentNotificationsRecipientIds(newSentNotif);\n            })\n            .catch(error => console.log(error));\n    }\n\n    function handleUnfollow(secondUserId) {\n        const firstUserId = sessionStorage.getItem(\"user_id\");\n        const link = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n        axios.delete(link)\n            .then(response => {\n                let newFriendIds = [...friendIds];\n                newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n                setFriendIds(newFriendIds);\n            })\n            .catch(error => console.log(error))\n    }\n\n\n    useEffect(() => {\n\n        axios.get(\"http://localhost:8080/api/users/\")\n            .then(response => {\n                setUsers(response.data);\n                findFriendIds();\n\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    function findFriendIds() {\n        const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => setFriendIds(response.data))\n            .catch(err => console.log(err.response));\n    }\n\n\n\n    useEffect(() => {\n        const link = \"http://localhost:8080/api/notifications/find/sent/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => {\n                let recipientIds = [];\n                response.data.forEach(notification => recipientIds.push(notification.recipientId));\n                setSentNotificationsRecipientIds(recipientIds);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n\n\n    return (\n        <div style={{ backgroundColor: \"rgba(255,255,255,0.10)\" }} className=\"rounded mt-5 p-1\" id=\"who-to-follow-container\">\n            <h3 className=\"bg-transparent\">Who to follow</h3>\n            <ul className=\"bg-transparent px-1\">\n                {users.map((user, index) => {\n                    if (user.userId != sessionStorage.getItem(\"user_id\")) {\n                        return (\n                            <li className=\"d-flex justify-content-between align-items-center bg-transparent my-3\" key={index}>\n                                <img src={user.profileImageUrl} alt=\"\" className=\"rounded-circle bg-transparent profile-img\" />\n                                <span className=\"bg-transparent post-acc-link-txt\">{user.firstName} {user.lastName}</span>\n                                {\n                                    sentNotificationsRecipientIds.includes(user.userId) ? (\n                                        <button className=\"btn rounded-pill bg-light p-2\" onClick={e => console.log(e.target.value)} value={user.userId}>Requested</button>\n                                    )\n\n                                        : !friendIds.includes(user.userId) ? (\n                                            <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleFollow(e.target.value)} value={user.userId}>Follow</button>\n                                        )\n                                            : <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleUnfollow(e.target.value)} value={user.userId}>Unfollow</button>\n                                }\n                            </li>\n                        )\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}