{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport placeholderImg from '../Static/Images/placeholder-img.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhoToFollow(props) {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [friendIds, setFriendIds] = useState([]);\n\n  function handleFollow(secondUserId) {\n    console.log(Object.keys(props));\n    console.log(\"Creating notif LOL!\"); // const notifcation = {\n    //     message: \"Friend Request\",\n    //     senderId: sessionStorage.getItem(\"user_id\"),\n    //     senderName: props.loggedInUser.firstName + \" \" + props.loggedInUser.lastName,\n    //     recipientId: secondUserId\n    // }\n    // axios.post(\"http://localhost:8080/api/notifications/create\", notifcation)\n    //     .then(response => {\n    //         console.log(response)\n    //     })\n    //     .catch(error => console.log(error));\n  }\n\n  function handleUnfollow(secondUserId) {\n    const firstUserId = sessionStorage.getItem(\"user_id\");\n    const link = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n    axios.delete(link).then(response => {\n      let newFriendIds = [...friendIds];\n      newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n      setFriendIds(newFriendIds);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/users/\").then(response => {\n      setUsers(response.data);\n      findFriendIds();\n    }).catch(err => console.log(err));\n  }, []);\n\n  function findFriendIds() {\n    const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => setFriendIds(response.data)).catch(err => console.log(err.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgba(255,255,255,0.10)\"\n    },\n    className: \"rounded mt-5 p-1\",\n    id: \"who-to-follow-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"bg-transparent\",\n      children: \"Who to follow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bg-transparent px-1\",\n      children: users.map((user, index) => {\n        if (user.userId != sessionStorage.getItem(\"user_id\")) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"d-flex justify-content-between align-items-center bg-transparent my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profileImageUrl,\n              alt: \"\",\n              className: \"rounded-circle bg-transparent profile-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-transparent post-acc-link-txt\",\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), !friendIds.includes(user.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleFollow(e.target.value),\n              value: user.userId,\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn rounded-pill bg-light p-2\",\n              onClick: e => handleUnfollow(e.target.value),\n              value: user.userId,\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WhoToFollow, \"gBJ/vYW2siYSneN3qQtRtCKEqJ4=\");\n\n_c = WhoToFollow;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhoToFollow\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/WhoToFollow.jsx"],"names":["axios","React","useEffect","useState","placeholderImg","WhoToFollow","props","users","setUsers","friendIds","setFriendIds","handleFollow","secondUserId","console","log","Object","keys","handleUnfollow","firstUserId","sessionStorage","getItem","link","delete","then","response","newFriendIds","splice","indexOf","catch","error","get","data","findFriendIds","err","backgroundColor","map","user","index","userId","profileImageUrl","firstName","lastName","includes","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport placeholderImg from '../Static/Images/placeholder-img.png'\n\n\n\n\n\nexport default function WhoToFollow(props) {\n    const [users, setUsers] = useState([]);\n    const [friendIds, setFriendIds] = useState([]);\n\n    function handleFollow(secondUserId){\n        console.log(Object.keys(props))\n        console.log(\"Creating notif LOL!\")\n        // const notifcation = {\n        //     message: \"Friend Request\",\n        //     senderId: sessionStorage.getItem(\"user_id\"),\n        //     senderName: props.loggedInUser.firstName + \" \" + props.loggedInUser.lastName,\n        //     recipientId: secondUserId\n        // }\n        // axios.post(\"http://localhost:8080/api/notifications/create\", notifcation)\n        //     .then(response => {\n        //         console.log(response)\n        //     })\n        //     .catch(error => console.log(error));\n    }\n\n    function handleUnfollow(secondUserId){\n        const firstUserId = sessionStorage.getItem(\"user_id\");\n        const link  = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n        axios.delete(link)\n            .then(response => {\n                let newFriendIds = [...friendIds];\n                newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n                setFriendIds(newFriendIds);\n        })\n            .catch(error => console.log(error))\n    }\n\n\n    useEffect(()=> {\n\n        axios.get(\"http://localhost:8080/api/users/\")\n            .then(response => {\n                setUsers(response.data);\n                findFriendIds();\n\n            })\n            .catch(err => console.log(err))\n    },[])\n\n    function findFriendIds(){\n        const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => setFriendIds(response.data))\n            .catch(err => console.log(err.response));\n    }\n\n\n\n    return (\n        <div style={{backgroundColor: \"rgba(255,255,255,0.10)\"}} className=\"rounded mt-5 p-1\" id=\"who-to-follow-container\">\n            <h3 className=\"bg-transparent\">Who to follow</h3>\n            <ul className=\"bg-transparent px-1\">\n                {users.map((user, index) => {\n                    if(user.userId != sessionStorage.getItem(\"user_id\")){\n                        return(\n                        <li className=\"d-flex justify-content-between align-items-center bg-transparent my-3\" key={index}>\n                            <img src={user.profileImageUrl} alt=\"\" className=\"rounded-circle bg-transparent profile-img\"/>\n                            <span className=\"bg-transparent post-acc-link-txt\">{user.firstName} {user.lastName}</span>\n                            {!friendIds.includes(user.userId) ? (\n                                <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleFollow(e.target.value)} value={user.userId}>Follow</button>\n                                )\n                                :   <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleUnfollow(e.target.value)} value={user.userId}>Unfollow</button>\n                            }\n                        </li>\n                        )\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}