{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/TweetForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TweetForm(props) {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (message.length !== 0) {\n      const post = {\n        message: message\n      };\n      axios.post(\"http://localhost:8080/api/posts/create/\" + props.loggedInUser.userId, post).then(response => {\n        let newPosts = [...props.posts];\n        newPosts.push(response.data);\n        props.setPosts(newPosts);\n        setMessage(\"\");\n        setMessageError(\"\");\n      }).catch(error => console.log(error.response));\n    } else {\n      setMessageError(\"You can't make a blank anotter!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweet-form\",\n    className: \"pb-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-1 mt-2 d-flex align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.loggedInUser.profileImageUrl,\n          alt: \"\",\n          className: \"rounded-circle profile-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-100 mx-3 text-end\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"What's happening?\",\n          className: \"w-100 bg-transparent border-0\",\n          rows: \"3\",\n          id: \"tweet-form-input\",\n          maxLength: \"200\",\n          value: message,\n          onInput: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: messageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary rounded-pill p-2\",\n          id: \"tweet-submit\",\n          children: \"Anotter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TweetForm, \"xyKL3ztzd/rZBQEPqj4zLuRfe9g=\");\n\n_c = TweetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetForm\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/TweetForm.jsx"],"names":["axios","React","useState","TweetForm","props","message","setMessage","messageError","setMessageError","handleSubmit","e","preventDefault","length","post","loggedInUser","userId","then","response","newPosts","posts","push","data","setPosts","catch","error","console","log","profileImageUrl","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGN,OAAO,CAACO,MAAR,KAAmB,CAAtB,EAAwB;AACpB,YAAMC,IAAI,GAAC;AACPR,QAAAA,OAAO,EAAEA;AADF,OAAX;AAIIL,MAAAA,KAAK,CAACa,IAAN,CAAW,4CAA4CT,KAAK,CAACU,YAAN,CAAmBC,MAA1E,EAAkFF,IAAlF,EACCG,IADD,CACMC,QAAQ,IAAI;AACd,YAAIC,QAAQ,GAAG,CAAC,GAAGd,KAAK,CAACe,KAAV,CAAf;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcH,QAAQ,CAACI,IAAvB;AACAjB,QAAAA,KAAK,CAACkB,QAAN,CAAeJ,QAAf;AACAZ,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,eAAe,CAAC,EAAD,CAAf;AACH,OAPD,EAQCe,KARD,CAQOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACP,QAAlB,CARhB;AASH,KAdL,MAcW;AACPT,MAAAA,eAAe,CAAC,iCAAD,CAAf;AACH;AACJ;;AAGD,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEJ,KAAK,CAACU,YAAN,CAAmBa,eAA7B;AAA8C,UAAA,GAAG,EAAC,EAAlD;AAAqD,UAAA,SAAS,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAsC,QAAA,QAAQ,EAAEjB,CAAC,IAAID,YAAY,CAACC,CAAD,CAAjE;AAAA,gCACI;AAAU,UAAA,WAAW,EAAC,mBAAtB;AAA0C,UAAA,SAAS,EAAC,+BAApD;AAAoF,UAAA,IAAI,EAAC,GAAzF;AAA6F,UAAA,EAAE,EAAC,kBAAhG;AAAmH,UAAA,SAAS,EAAC,KAA7H;AAAmI,UAAA,KAAK,EAAEL,OAA1I;AAAmJ,UAAA,OAAO,EAAEK,CAAC,IAAI;AAC7JJ,YAAAA,UAAU,CAACI,CAAC,CAACkB,MAAF,CAASC,KAAV,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BtB;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,kCAAhC;AAAmE,UAAA,EAAE,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA3CuBJ,S;;KAAAA,S","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\n\nexport default function TweetForm(props) {\n    const [message, setMessage] = useState(\"\");\n    const [messageError, setMessageError] = useState(\"\");\n\n    function handleSubmit(e){\n        e.preventDefault();\n\n        if(message.length !== 0){\n            const post={\n                message: message\n            }\n\n                axios.post(\"http://localhost:8080/api/posts/create/\" + props.loggedInUser.userId, post)\n                .then(response => {\n                    let newPosts = [...props.posts];\n                    newPosts.push(response.data);\n                    props.setPosts(newPosts);\n                    setMessage(\"\");\n                    setMessageError(\"\");\n                })\n                .catch(error => console.log(error.response))\n            } else {\n            setMessageError(\"You can't make a blank anotter!\");\n        }        \n    }\n\n\n    return (\n        <div id=\"tweet-form\" className=\"pb-2\">\n            <div className=\"px-1 mt-2 d-flex align-items-start\">\n                <p className=\"profile-img-container\">\n                    <img src={props.loggedInUser.profileImageUrl} alt=\"\" className=\"rounded-circle profile-img\"/>\n                </p>\n                <form className=\"w-100 mx-3 text-end\" onSubmit={e => handleSubmit(e)}>\n                    <textarea placeholder=\"What's happening?\" className=\"w-100 bg-transparent border-0\" rows=\"3\" id=\"tweet-form-input\" maxLength=\"200\" value={message} onInput={e => {\n                        setMessage(e.target.value);\n                    }}/>\n                    <p className=\"text-danger\">{messageError}</p>\n                    <button type=\"submit\" className=\"btn btn-primary rounded-pill p-2\" id=\"tweet-submit\">Anotter</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}