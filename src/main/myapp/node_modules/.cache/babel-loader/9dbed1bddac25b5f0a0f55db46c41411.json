{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/UserDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserDisplay(props) {\n  _s();\n\n  const [userToDisplay, setUserToDisplay] = useState({});\n  let history = useHistory();\n  const [friendIds, setFriendIds] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/users/\" + props.id).then(response => {\n      if (response.data.biography) {\n        //User was found\n        console.log(\"user was found.\");\n        setUserToDisplay(response.data);\n        findFriendIds();\n      } else {\n        //User was not found\n        history.push(\"/\");\n      }\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleFollow(secondUserId) {\n    const addFriendship = {\n      firstUserId: sessionStorage.getItem(\"user_id\"),\n      secondUserId: secondUserId\n    };\n    console.log(addFriendship);\n    axios.post(\"http://localhost:8080/api/friendships/create\", addFriendship).then(response => {\n      console.log(response);\n      findFriendIds();\n    }).catch(error => console.log(error));\n  }\n\n  function handleUnfollow(secondUserId) {\n    const firstUserId = sessionStorage.getItem(\"user_id\");\n    const link = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n    axios.delete(link).then(response => {\n      let newFriendIds = [...friendIds];\n      newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n      setFriendIds(newFriendIds);\n    }).catch(error => console.log(error));\n  }\n\n  function findFriendIds() {\n    const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n    axios.get(link).then(response => setFriendIds(response.data)).catch(err => console.log(err.response));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://c4.wallpaperflare.com/wallpaper/55/456/961/4k-galaxy-space-planet-wallpaper-preview.jpg\",\n        alt: \"Profile banner\",\n        style: {\n          objectFit: \"cover\",\n          objectPosition: \"center center\",\n          height: \"175px\",\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userToDisplay.profileImageUrl,\n            className: \"w-25\",\n            style: {\n              borderRadius: \"50%\",\n              minWidth: \"100px\",\n              position: \"relative\",\n              top: \"-75px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h1 ms-3\",\n            children: [userToDisplay.firstName, \" \", userToDisplay.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), userToDisplay.userId != sessionStorage.getItem(\"user_id\") ? !friendIds.includes(userToDisplay.userId) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn rounded-pill bg-light p-2 w-25\",\n            style: {\n              width: \"100px !important\"\n            },\n            onClick: e => handleFollow(e.target.value),\n            value: userToDisplay.userId,\n            children: \"Follow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn rounded-pill bg-light p-2\",\n            onClick: e => handleUnfollow(e.target.value),\n            value: userToDisplay.userId,\n            children: \"Unfollow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 32\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserDisplay, \"v3wxSI4S0Srt3XZWklEmak3rFYk=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDisplay\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/Personal Projects/Otter/src/main/myapp/src/Components/UserDisplay.jsx"],"names":["axios","React","useEffect","useState","useHistory","useParams","UserDisplay","props","userToDisplay","setUserToDisplay","history","friendIds","setFriendIds","get","id","then","response","data","biography","console","log","findFriendIds","push","catch","err","handleFollow","secondUserId","addFriendship","firstUserId","sessionStorage","getItem","post","error","handleUnfollow","link","delete","newFriendIds","splice","indexOf","objectFit","objectPosition","height","width","profileImageUrl","borderRadius","minWidth","position","top","firstName","lastName","userId","includes","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router'\n\nexport default function UserDisplay(props) {\n    const [userToDisplay, setUserToDisplay] = useState({});\n    let history = useHistory();\n    const [friendIds, setFriendIds] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/api/users/\" + props.id)\n            .then(response => {\n                if(response.data.biography){\n                    //User was found\n                    console.log(\"user was found.\")\n                    setUserToDisplay(response.data)\n                    findFriendIds();\n                } else{\n                    //User was not found\n                    history.push(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    function handleFollow(secondUserId){\n        const addFriendship = {\n            firstUserId: sessionStorage.getItem(\"user_id\"),\n            secondUserId: secondUserId\n        }\n        console.log(addFriendship);\n        axios.post(\"http://localhost:8080/api/friendships/create\", addFriendship)\n            .then(response => {\n                console.log(response)\n                findFriendIds();\n            })\n            .catch(error => console.log(error));\n    }\n\n    function handleUnfollow(secondUserId){\n        const firstUserId = sessionStorage.getItem(\"user_id\");\n        const link  = \"http://localhost:8080/api/friendships/delete/\" + firstUserId + \"/\" + secondUserId;\n        axios.delete(link)\n            .then(response => {\n                let newFriendIds = [...friendIds];\n                newFriendIds.splice(newFriendIds.indexOf(secondUserId), 1);\n                setFriendIds(newFriendIds);\n        })\n            .catch(error => console.log(error))\n    }\n\n    function findFriendIds(){\n        const link = \"http://localhost:8080/api/friendships/findAllFriends/\" + sessionStorage.getItem(\"user_id\");\n        axios.get(link)\n            .then(response => setFriendIds(response.data))\n            .catch(err => console.log(err.response));\n    }\n\n    return (\n        <>\n            <div className=\"text-start\">\n                <img src=\"https://c4.wallpaperflare.com/wallpaper/55/456/961/4k-galaxy-space-planet-wallpaper-preview.jpg\" alt=\"Profile banner\" style={{objectFit:\"cover\", objectPosition: \"center center\" ,height: \"175px\", width: \"100%\"}}/>\n                <div className=\"mx-5\">\n                    <div className=\"d-flex\">\n                        <img src={userToDisplay.profileImageUrl} className=\"w-25\" style={{borderRadius:\"50%\", minWidth:\"100px\", position:\"relative\", top:\"-75px\"}} />\n                        <span className=\"h1 ms-3\">{userToDisplay.firstName} {userToDisplay.lastName}</span>\n                        {userToDisplay.userId != sessionStorage.getItem(\"user_id\") ?\n                        !friendIds.includes(userToDisplay.userId) ? (\n                            <button className=\"btn rounded-pill bg-light p-2 w-25\" style={{width: \"100px !important\"}} onClick={e => handleFollow(e.target.value)} value={userToDisplay.userId}>Follow</button>\n                            )\n                            :  <button className=\"btn rounded-pill bg-light p-2\" onClick={e => handleUnfollow(e.target.value)} value={userToDisplay.userId}>Unfollow</button>\n                        \n                        :null    \n                    }\n                        \n                    </div>\n                    \n                </div>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}