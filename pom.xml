<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.thomasmoore.otter</groupId>
	<artifactId>Otter</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Otter</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-validation</artifactId>
    	</dependency>
		
		<!-- MySQL -->
    <!-- Comment this section in if you are using MySQL! -->
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
		
		<!-- Bcrypt -->
    	<dependency>
        	<groupId>org.mindrot</groupId>
        	<artifactId>jbcrypt</artifactId>
        	<version>0.4</version>
    	</dependency>
    	
    	<!-- Single WAR file  -->
    	<dependency>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>1.6</version>
		</dependency>
		
		<dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		
		<dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
    
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		<plugin>
   			<groupId>com.github.eirslett</groupId>
   			<artifactId>frontend-maven-plugin</artifactId>
  			<version>1.6</version>
   			<configuration>
      			<workingDirectory>src/main/myapp</workingDirectory>
      			<installDirectory>target</installDirectory>
   			</configuration>
   			<executions>
      			<execution>
         			<id>install node and npm</id>
         			<goals>
            			<goal>install-node-and-npm</goal>
         			</goals>
         			<configuration>
            			<nodeVersion>v16.15.0</nodeVersion>
            			<npmVersion>8.11.0</npmVersion>
         			</configuration>
      			</execution>
      			<execution>
         			<id>npm install</id>
         			<goals>
            			<goal>npm</goal>
         			</goals>
         			<configuration>
            			<arguments>install</arguments>
         			</configuration>
      			</execution>
      			<execution>
         			<id>npm run build</id>
         			<goals>
           				<goal>npm</goal>
         			</goals>
         			<configuration>
            			<arguments>run build</arguments>
         			</configuration>
      			</execution>
   		   </executions>
	</plugin>
	<plugin>
  		<artifactId>maven-antrun-plugin</artifactId>
   		<executions>
      		<execution>
         		<phase>generate-resources</phase>
         		<configuration>
            		<target>
               			<copy todir="${project.build.directory}/classes/public">
                  			<fileset dir="${project.basedir}/src/main/myapp"/>
               			</copy>
            		</target>
         		</configuration>
         		<goals>
            		<goal>run</goal>
         		</goals>
      	</execution>
  	 </executions>
	</plugin>
			
		</plugins>
	</build>

</project>
